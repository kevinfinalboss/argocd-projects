apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: voidgo
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/kevinfinalboss/argocd-projects.git
    targetRevision: HEAD
    path: charts/application-template
    helm:
      values: |-
        replicaCount: 1
        
        image:
          repository: docker.io/kevinfinalboss/voidbot
          tag: v1.0.0
          pullPolicy: Always
        
        nameOverride: "voidbot"
        fullnameOverride: "voidbot"
        
        containerPort: 8080
        
        service:
          type: ClusterIP
          port: 8080
          nodePort: null
        
        persistence:
          enabled: true
          storageClass: ""
          accessMode: ReadWriteOnce
          size: 1Gi
          annotations: {}
        
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            memory: 128Mi
            cpu: 100m

        externalSecrets:
          enabled: true
          mountAsFile: true
          mountAsEnv: false
          parameters:
            - name: config
              path: /eks/bot/voidbot/config
              key: config.yaml
              mountPath: /app/config.yaml
        
        volumeMounts:
          - name: logs
            mountPath: /app/logs
            subPath: logs
          - name: events
            mountPath: /app/events
            subPath: events
          - name: commands
            mountPath: /app/commands
            subPath: commands
          - name: internal
            mountPath: /app/internal
            subPath: internal
          - name: api
            mountPath: /app/api
            subPath: api
          - name: config
            mountPath: /app/config
            subPath: config
          - name: scripts
            mountPath: /app/scripts
            subPath: scripts
        
        env: []
        
        nodeSelector: {}
        tolerations: []
        affinity: {}

  destination:
    server: https://kubernetes.default.svc
    namespace: bot
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true