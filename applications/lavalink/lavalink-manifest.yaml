---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: lavalink-parameters
  namespace: lavalink
  labels:
    app.kubernetes.io/name: lavalink
    app.kubernetes.io/instance: lavalink
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-parameter-store
    kind: ClusterSecretStore
  target:
    name: lavalink-secrets
  data:
    - secretKey: application.yml
      remoteRef:
        key: /eks/bot/lavalink/config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lavalink-pvc
  namespace: lavalink
  labels:
    app.kubernetes.io/name: lavalink
    app.kubernetes.io/instance: lavalink
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lavalink
  namespace: lavalink
  labels:
    app.kubernetes.io/name: lavalink
    app.kubernetes.io/instance: lavalink
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lavalink
      app.kubernetes.io/instance: lavalink
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lavalink
        app.kubernetes.io/instance: lavalink
    spec:
      containers:
        - name: lavalink
          image: "docker.io/kevinfinalboss/lavalink:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 2334
          env:
            - name: SERVER_PORT
              value: "2334"
            - name: SERVER_ADDRESS
              value: "0.0.0.0"
            - name: JAVA_OPTS
              value: "-Xmx700M -Xms300M -XX:+UseG1GC -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:+ParallelRefProcEnabled"
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
            requests:
              cpu: "500m"
              memory: "512Mi"
          # Monta somente o arquivo application.yml sem sobrescrever /opt/lavalink
          volumeMounts:
            - name: config-volume
              mountPath: /opt/lavalink/application.yml
              subPath: application.yml
            - name: data
              mountPath: /data
      nodeSelector: {}
      tolerations: []
      affinity: {}
      volumes:
        - name: config-volume
          secret:
            secretName: lavalink-secrets
        - name: data
          persistentVolumeClaim:
            claimName: lavalink-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: lavalink
  namespace: lavalink
  labels:
    app.kubernetes.io/name: lavalink
    app.kubernetes.io/instance: lavalink
spec:
  type: ClusterIP
  ports:
    - port: 2334
      targetPort: 2334
  selector:
    app.kubernetes.io/name: lavalink
    app.kubernetes.io/instance: lavalink
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lavalink
  namespace: lavalink
  labels:
    app.kubernetes.io/name: lavalink
    app.kubernetes.io/instance: lavalink
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "TCP"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    external-dns.alpha.kubernetes.io/hostname: "lavalink.kevindev.com.br"
    external-dns.alpha.kubernetes.io/target: "147.93.69.150"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "lavalink.kevindev.com.br"
      secretName: lavalink-server-tls
  rules:
    - host: "lavalink.kevindev.com.br"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: lavalink
                port:
                  number: 2334
